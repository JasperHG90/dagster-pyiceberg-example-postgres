services:
  dagster-pyiceberg-example:
    env_file: .env
    build:
      dockerfile: Dockerfile
      context: "."
    command: /bin/sh -c "while sleep 1000; do :; done"
    volumes:
      - ..:/home/vscode/workspace:cached
    networks:
      - dagster-pyiceberg-example
  # PyIceberg catalog backend
  postgres:
    image: postgres:17
    restart: unless-stopped
    #volumes:
    #  - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: pyiceberg
      POSTGRES_DB: catalog
      POSTGRES_PASSWORD: pyiceberg
    networks:
      - dagster-pyiceberg-example
  # Minio for storing the Iceberg tables
  minio:
    image: docker.io/bitnami/minio:2022
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - dagster-pyiceberg-example
    volumes:
      - 'minio-data:/data'
    environment:
      - MINIO_ROOT_USER=pyiceberg
      - MINIO_ROOT_PASSWORD=pyiceberg
      - MINIO_DEFAULT_BUCKETS=warehouse
      - MINIO_ACCESS_KEY=fhgsf678264687gdsjfhg
      - MINIO_SECRET_KEY=89899fsd3e347fah87nmcsa
  # For rate-limiting requests to the luchtmeetnet API
  redis:
    image: redis/redis-stack-server:6.2.6-v17
    restart: unless-stopped
    networks:
      - dagster-pyiceberg-example
    volumes:
      - redis-data:/data
    environment:
      REDIS_ARGS: --requirepass dagster --user dagster --port 16564

networks:
  dagster-pyiceberg-example:
    name: dagster-pyiceberg-example-network

volumes:
  postgres-data:
  redis-data:
  minio-data:
